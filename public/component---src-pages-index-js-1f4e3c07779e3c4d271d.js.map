{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["CENTER","IndexPage","useTracker","api","data","stats","countries","hasCountries","Array","isArray","length","dashboardStats","primary","label","value","commafy","cases","deaths","tests","active","critical","recovered","a","map","leafletElement","eachLayer","layer","options","name","removeLayer","geoJson","type","features","country","countryInfo","lat","lng","long","properties","geometry","coordinates","L","GeoJSON","pointToLayer","feature","latlng","updatedFormatted","casesString","updated","slice","Date","toLocaleString","html","marker","icon","divIcon","className","riseOnHover","addTo","mapSettings","center","defaultBaseMap","zoom","mapEffect","pageName","i","key","friendlyDate"],"mappings":"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","file":"component---src-pages-index-js-1f4e3c07779e3c4d271d.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport L from \"leaflet\";\n\nimport { useTracker } from \"hooks\";\nimport { commafy, friendlyDate } from \"lib/util\";\n\nimport Layout from \"components/Layout\";\nimport Container from \"components/Container\";\nimport Map from \"components/Map\";\n\nconst LOCATION = {\n  lat: 0,\n  lng: 0,\n};\nconst CENTER = [LOCATION.lat, LOCATION.lng];\nconst DEFAULT_ZOOM = 2;\n\nconst IndexPage = () => {\n  const { data: stats = {} } = useTracker({\n    api: \"all\",\n  });\n\n  const { data: countries = [] } = useTracker({\n    api: \"countries\",\n  });\n\n  const hasCountries = Array.isArray(countries) && countries.length > 0;\n\n  const dashboardStats = [\n    {\n      primary: {\n        label: \"Total Cases\",\n        value: stats ? commafy(stats?.cases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Deaths\",\n        value: stats ? commafy(stats?.deaths) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Tests\",\n        value: stats ? commafy(stats?.tests) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Active Cases\",\n        value: stats ? commafy(stats?.active) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Critical Cases\",\n        value: stats ? commafy(stats?.critical) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Recovered Cases\",\n        value: stats ? commafy(stats?.recovered) : \"-\",\n      },\n    },\n  ];\n\n  /**\n   * mapEffect\n   * @description Fires a callback once the page renders\n   * @example Here this is and example of being used to zoom in and set a popup on load\n   */\n\n  async function mapEffect({ leafletElement: map } = {}) {\n    if (!hasCountries || !map) return;\n\n    map.eachLayer((layer) => {\n      if (layer?.options?.name === \"OpenStreetMap\") return;\n      map.removeLayer(layer);\n    });\n\n    const geoJson = {\n      type: \"FeatureCollection\",\n      features: countries.map((country = {}) => {\n        const { countryInfo = {} } = country;\n        const { lat, long: lng } = countryInfo;\n        return {\n          type: \"Feature\",\n          properties: {\n            ...country,\n          },\n          geometry: {\n            type: \"Point\",\n            coordinates: [lng, lat],\n          },\n        };\n      }),\n    };\n\n    const geoJsonLayers = new L.GeoJSON(geoJson, {\n      pointToLayer: (feature = {}, latlng) => {\n        const { properties = {} } = feature;\n        let updatedFormatted;\n        let casesString;\n\n        const { country, updated, cases, deaths, recovered } = properties;\n\n        casesString = `${cases}`;\n\n        if (cases > 1000000) {\n          casesString = `${casesString.slice(0, -6)}M+`;\n        } else if (cases > 1000) {\n          casesString = `${casesString.slice(0, -3)}K+`;\n        }\n        if (updated) {\n          updatedFormatted = new Date(updated).toLocaleString();\n        }\n\n        const html = `\n          <span class=\"icon-marker\">\n            <span class=\"icon-marker-tooltip\">\n              <h2>${country}</h2>\n              <ul>\n                <li><strong>Confirmed:</strong> ${cases}</li>\n                <li><strong>Deaths:</strong> ${deaths}</li>\n                <li><strong>Recovered:</strong> ${recovered}</li>\n                <li><strong>Last Update:</strong> ${updatedFormatted}</li>\n              </ul>\n            </span>\n            ${casesString}\n          </span>\n        `;\n\n        return L.marker(latlng, {\n          icon: L.divIcon({\n            className: \"icon\",\n            html,\n          }),\n          riseOnHover: true,\n        });\n      },\n    });\n\n    geoJsonLayers.addTo(map);\n  }\n\n  const mapSettings = {\n    center: CENTER,\n    defaultBaseMap: \"OpenStreetMap\",\n    zoom: DEFAULT_ZOOM,\n    mapEffect,\n  };\n\n  return (\n    <Layout pageName=\"home\">\n      <Helmet>\n        <title>Home Page</title>\n      </Helmet>\n\n      <div className=\"tracker\">\n        <Map {...mapSettings} />\n        <div className=\"tracker-stats\">\n          <ul>\n            {dashboardStats.map(({ primary = {} }, i) => {\n              return (\n                <li key={`Stat-${i}`} className=\"tracker-stat\">\n                  {primary.value && (\n                    <p className=\"tracker-stat-primary\">\n                      {primary.value}\n                      <strong>{primary.label}</strong>\n                    </p>\n                  )}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"tracker-last-updated\">\n          <p>Last Updated: {stats ? friendlyDate(stats?.updated) : \"-\"}</p>\n        </div>\n      </div>\n      {/*}\n      <Container type=\"content\" className=\"text-center home-start\">\n        <h2>Still Getting Started?</h2>\n        <p>Run the following in your terminal!</p>\n        <pre>\n          <code>\n            gatsby new [directory]\n            https://github.com/colbyfayock/gatsby-starter-leaflet\n          </code>\n        </pre>\n        <p className=\"note\">\n          Note: Gatsby CLI required globally for the above command\n        </p>\n      </Container>\n      */}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}