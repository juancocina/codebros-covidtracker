{"version":3,"sources":["webpack:///./src/pages/states.js"],"names":["CENTER","States","useUSTracker","api","data","stats","CAStats","NYStats","TXStats","WAStats","FLStats","states","hasStates","Array","isArray","length","dashboardStats","primary","label","value","commafy","cases","deaths","tests","active","critical","recovered","CADashboardStats","todayCases","NYDashboardStats","TXDashboardStats","WADashboardStats","FLDashboardStats","a","map","leafletElement","eachLayer","layer","options","name","removeLayer","mapSettings","center","defaultBaseMap","zoom","mapEffect","pageName","type","className","i","key","friendlyDate","updated"],"mappings":"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","file":"component---src-pages-states-js-ef5fc8ad8ff221ec9d47.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport L from \"leaflet\";\n\nimport { useUSTracker } from \"hooks\";\nimport { commafy, friendlyDate } from \"lib/util\";\n\nimport Layout from \"components/Layout\";\nimport Container from \"components/Container\";\nimport Map from \"components/Map\";\n\nconst LOCATION = {\n  lat: 37,\n  lng: -95,\n};\nconst CENTER = [LOCATION.lat, LOCATION.lng];\nconst DEFAULT_ZOOM = 4;\n\nconst States = () => {\n\n  const { data: stats = {} } = useUSTracker({\n    api: \"USA\",\n  });\n\n  //Time constraint: only a select few of states were used\n\n  const { data: CAStats = {} } = useUSTracker({\n    api: \"CA\",\n  });\n\n  const { data: NYStats = {} } = useUSTracker({\n    api: \"NY\",\n  });\n\n  const { data: TXStats = {} } = useUSTracker({\n    api: \"TX\",\n  });\n\n  const { data: WAStats = {} } = useUSTracker({\n    api: \"WA\",\n  });\n\n  const { data: FLStats = {} } = useUSTracker({\n    api: \"FL\",\n  });\n\n  const { data: states = [] } = useUSTracker({\n    api: \"states\",\n  });\n\n   const hasStates = Array.isArray(states) && states.length > 0;\n\n  const dashboardStats = [\n    {\n      primary: {\n        label: \"Total Cases\",\n        value: stats ? commafy(stats?.cases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Deaths\",\n        value: stats ? commafy(stats?.deaths) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Tests\",\n        value: stats ? commafy(stats?.tests) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Active Cases\",\n        value: stats ? commafy(stats?.active) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Critical Cases\",\n        value: stats ? commafy(stats?.critical) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Recovered Cases\",\n        value: stats ? commafy(stats?.recovered) : \"-\",\n      },\n    },\n  ];\n\n  const CADashboardStats = [\n    {\n      primary: {\n        label: \"Total Cases\",\n        value: CAStats ? commafy(CAStats?.cases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Deaths\",\n        value: CAStats ? commafy(CAStats?.deaths) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Tests\",\n        value: CAStats ? commafy(CAStats?.tests) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Active Cases\",\n        value: CAStats ? commafy(CAStats?.active) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Today's Cases\",\n        value: CAStats ? commafy(CAStats?.todayCases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Recovered Cases\",\n        value: CAStats ? commafy(CAStats?.recovered) : \"-\",\n      },\n    },\n  ];\n\n  const NYDashboardStats = [\n    {\n      primary: {\n        label: \"Total Cases\",\n        value: NYStats ? commafy(NYStats?.cases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Deaths\",\n        value: NYStats ? commafy(NYStats?.deaths) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Tests\",\n        value: NYStats ? commafy(NYStats?.tests) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Active Cases\",\n        value: NYStats ? commafy(NYStats?.active) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Today's Cases\",\n        value: NYStats ? commafy(NYStats?.todayCases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Recovered Cases\",\n        value: NYStats ? commafy(NYStats?.recovered) : \"-\",\n      },\n    },\n  ];\n\n  const TXDashboardStats = [\n    {\n      primary: {\n        label: \"Total Cases\",\n        value: TXStats ? commafy(TXStats?.cases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Deaths\",\n        value: TXStats ? commafy(TXStats?.deaths) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Tests\",\n        value: TXStats ? commafy(TXStats?.tests) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Active Cases\",\n        value: TXStats ? commafy(TXStats?.active) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Today's Cases\",\n        value: TXStats ? commafy(TXStats?.todayCases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Recovered Cases\",\n        value: TXStats ? commafy(TXStats?.recovered) : \"-\",\n      },\n    },\n  ];\n\n  const WADashboardStats = [\n    {\n      primary: {\n        label: \"Total Cases\",\n        value: WAStats ? commafy(WAStats?.cases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Deaths\",\n        value: WAStats ? commafy(WAStats?.deaths) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Tests\",\n        value: WAStats ? commafy(WAStats?.tests) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Active Cases\",\n        value: WAStats ? commafy(WAStats?.active) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Today's Cases\",\n        value: WAStats ? commafy(WAStats?.todayCases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Recovered Cases\",\n        value: WAStats ? commafy(WAStats?.recovered) : \"-\",\n      },\n    },\n  ];\n\n  const FLDashboardStats = [\n    {\n      primary: {\n        label: \"Total Cases\",\n        value: FLStats ? commafy(FLStats?.cases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Deaths\",\n        value: FLStats ? commafy(FLStats?.deaths) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Total Tests\",\n        value: FLStats ? commafy(FLStats?.tests) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Active Cases\",\n        value: FLStats ? commafy(FLStats?.active) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Today's Cases\",\n        value: FLStats ? commafy(FLStats?.todayCases) : \"-\",\n      },\n    },\n    {\n      primary: {\n        label: \"Recovered Cases\",\n        value: FLStats ? commafy(FLStats?.recovered) : \"-\",\n      },\n    },\n  ];\n  \n\n  /**\n   * mapEffect\n   * @description Fires a callback once the page renders\n   * @example Here this is and example of being used to zoom in and set a popup on load\n   */\n\n  async function mapEffect({ leafletElement: map } = {}) \n  {\n     if (!hasStates || !map) return;\n\n     map.eachLayer((layer) => {\n      if (layer?.options?.name === \"OpenStreetMap\") return;\n      map.removeLayer(layer);\n    });\n  }\n\n  const mapSettings = {\n    center: CENTER,\n    defaultBaseMap: \"OpenStreetMap\",\n    zoom: DEFAULT_ZOOM,\n    mapEffect,\n  };\n\n  return (\n    <Layout pageName=\"home\">\n      <Helmet>\n        <title>US</title>\n      </Helmet>\n\n      <Container type=\"content\" className=\"text-center\">\n        <h1>United States</h1>\n      </Container>\n\n      <div className=\"tracker\">\n        <Map {...mapSettings} />\n        <div className=\"tracker-stats\">\n          <ul>\n            { dashboardStats.map(({ primary = {} }, i ) => {\n              return (\n                <li key={`Stat-${i}`} className=\"tracker-stat\">\n                  { primary.value && (\n                    <p className=\"tracker-stat-primary\">\n                      { primary.value }\n                      <strong>{ primary.label }</strong>\n                    </p>\n                  ) }\n                </li>\n              );\n            }) }\n          </ul>\n          <div className=\"tracker-last-updated\">\n            <p>Last Updated: { stats ? friendlyDate( stats?.updated ) : '-' }</p>\n          </div>\n        </div>\n\n        <Container type=\"content\" className=\"text-center\">\n        <h1>California</h1>\n        </Container>\n        <div className=\"tracker-stats\">\n          <ul>\n            { CADashboardStats.map(({ primary = {} }, i ) => {\n              return (\n                <li key={`Stat-${i}`} className=\"tracker-stat\">\n                  { primary.value && (\n                    <p className=\"tracker-stat-primary\">\n                      { primary.value }\n                      <strong>{ primary.label }</strong>\n                    </p>\n                  ) }\n                </li>\n              );\n            }) }\n          </ul>\n        </div>\n        <div className=\"tracker-last-updated\">\n          <p>Last Updated: { CAStats ? friendlyDate( CAStats?.updated ) : '-' }</p>\n        </div>\n\n        <Container type=\"content\" className=\"text-center\">\n        <h1>Florida</h1>\n        </Container>\n        <div className=\"tracker-stats\">\n          <ul>\n            { FLDashboardStats.map(({ primary = {} }, i ) => {\n              return (\n                <li key={`Stat-${i}`} className=\"tracker-stat\">\n                  { primary.value && (\n                    <p className=\"tracker-stat-primary\">\n                      { primary.value }\n                      <strong>{ primary.label }</strong>\n                    </p>\n                  ) }\n                </li>\n              );\n            }) }\n          </ul>\n        </div>\n        <div className=\"tracker-last-updated\">\n          <p>Last Updated: { FLStats ? friendlyDate( FLStats?.updated ) : '-' }</p>\n        </div>\n\n        <Container type=\"content\" className=\"text-center\">\n        <h1>New York</h1>\n        </Container>\n        <div className=\"tracker-stats\">\n          <ul>\n            { NYDashboardStats.map(({ primary = {} }, i ) => {\n              return (\n                <li key={`Stat-${i}`} className=\"tracker-stat\">\n                  { primary.value && (\n                    <p className=\"tracker-stat-primary\">\n                      { primary.value }\n                      <strong>{ primary.label }</strong>\n                    </p>\n                  ) }\n                </li>\n              );\n            }) }\n          </ul>\n        </div>\n        <div className=\"tracker-last-updated\">\n          <p>Last Updated: { NYStats ? friendlyDate( NYStats?.updated ) : '-' }</p>\n        </div>\n\n        <Container type=\"content\" className=\"text-center\">\n        <h1>Texas</h1>\n        </Container>\n        <div className=\"tracker-stats\">\n          <ul>\n            { TXDashboardStats.map(({ primary = {} }, i ) => {\n              return (\n                <li key={`Stat-${i}`} className=\"tracker-stat\">\n                  { primary.value && (\n                    <p className=\"tracker-stat-primary\">\n                      { primary.value }\n                      <strong>{ primary.label }</strong>\n                    </p>\n                  ) }\n                </li>\n              );\n            }) }\n          </ul>\n        </div>\n        <div className=\"tracker-last-updated\">\n          <p>Last Updated: { TXStats ? friendlyDate( TXStats?.updated ) : '-' }</p>\n        </div>\n\n        <Container type=\"content\" className=\"text-center\">\n        <h1>Washington</h1>\n        </Container>\n        <div className=\"tracker-stats\">\n          <ul>\n            { WADashboardStats.map(({ primary = {} }, i ) => {\n              return (\n                <li key={`Stat-${i}`} className=\"tracker-stat\">\n                  { primary.value && (\n                    <p className=\"tracker-stat-primary\">\n                      { primary.value }\n                      <strong>{ primary.label }</strong>\n                    </p>\n                  ) }\n                </li>\n              );\n            }) }\n          </ul>\n        </div>\n        <div className=\"tracker-last-updated\">\n          <p>Last Updated: { WAStats ? friendlyDate( WAStats?.updated ) : '-' }</p>\n        </div>\n      </div>\n\n      \n\n      <Container type=\"content\" className=\"text-center home-start\">\n        <h2>Still Getting Started?</h2>\n        <p>Run the following in your terminal!</p>\n        <pre>\n          <code>gatsby new [directory] https://github.com/colbyfayock/gatsby-starter-leaflet</code>\n        </pre>\n        <p className=\"note\">Note: Gatsby CLI required globally for the above command</p>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default States;\n"],"sourceRoot":""}